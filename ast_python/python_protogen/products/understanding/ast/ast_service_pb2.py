# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: products/understanding/ast/ast_service.proto
# Protobuf Python Version: 6.31.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    0,
    '',
    'products/understanding/ast/ast_service.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from python_protogen.common import events_pb2 as common_dot_events__pb2
from python_protogen.common import rpcmeta_pb2 as common_dot_rpcmeta__pb2
from python_protogen.products.understanding.base import au_base_pb2 as products_dot_understanding_dot_base_dot_au__base__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n,products/understanding/ast/ast_service.proto\x12\x0f\x64\x61ta.speech.ast\x1a\x13\x63ommon/events.proto\x1a\x14\x63ommon/rpcmeta.proto\x1a)products/understanding/base/au_base.proto\"\x92\x01\n\tReqParams\x12\x0c\n\x04mode\x18\x01 \x01(\t\x12\x17\n\x0fsource_language\x18\x02 \x01(\t\x12\x17\n\x0ftarget_language\x18\x03 \x01(\t\x12\x12\n\nspeaker_id\x18\x04 \x01(\t\x12\x31\n\x06\x63orpus\x18\x64 \x01(\x0b\x32!.data.speech.understanding.Corpus\"\xf5\x02\n\x10TranslateRequest\x12:\n\x0crequest_meta\x18\x01 \x01(\x0b\x32\x1f.data.speech.common.RequestMetaH\x00\x88\x01\x01\x12&\n\x05\x65vent\x18\x02 \x01(\x0e\x32\x17.data.speech.event.Type\x12-\n\x04user\x18\x03 \x01(\x0b\x32\x1f.data.speech.understanding.User\x12\x36\n\x0csource_audio\x18\x04 \x01(\x0b\x32 .data.speech.understanding.Audio\x12\x36\n\x0ctarget_audio\x18\x05 \x01(\x0b\x32 .data.speech.understanding.Audio\x12+\n\x07request\x18\x06 \x01(\x0b\x32\x1a.data.speech.ast.ReqParams\x12\x14\n\x07\x64\x65noise\x18\x07 \x01(\x08H\x01\x88\x01\x01\x42\x0f\n\r_request_metaB\n\n\x08_denoise\"\xf9\x01\n\x11TranslateResponse\x12<\n\rresponse_meta\x18\x01 \x01(\x0b\x32 .data.speech.common.ResponseMetaH\x00\x88\x01\x01\x12&\n\x05\x65vent\x18\x02 \x01(\x0e\x32\x17.data.speech.event.Type\x12\x0c\n\x04\x64\x61ta\x18\x03 \x01(\x0c\x12\x0c\n\x04text\x18\x04 \x01(\t\x12\x12\n\nstart_time\x18\x05 \x01(\x05\x12\x10\n\x08\x65nd_time\x18\x06 \x01(\x05\x12\x0f\n\x07spk_chg\x18\x07 \x01(\x08\x12\x19\n\x11muted_duration_ms\x18\x08 \x01(\x05\x42\x10\n\x0e_response_meta2d\n\nASTService\x12V\n\tTranslate\x12!.data.speech.ast.TranslateRequest\x1a\".data.speech.ast.TranslateResponse(\x01\x30\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'products.understanding.ast.ast_service_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_REQPARAMS']._serialized_start=152
  _globals['_REQPARAMS']._serialized_end=298
  _globals['_TRANSLATEREQUEST']._serialized_start=301
  _globals['_TRANSLATEREQUEST']._serialized_end=674
  _globals['_TRANSLATERESPONSE']._serialized_start=677
  _globals['_TRANSLATERESPONSE']._serialized_end=926
  _globals['_ASTSERVICE']._serialized_start=928
  _globals['_ASTSERVICE']._serialized_end=1028
# @@protoc_insertion_point(module_scope)
